# -*- coding: utf-8 -*-
"""tensorflow2.1.0___tensorflow_lite.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ATJkKUeBeYXSkqIp45Z8dwZBN98CSnbH

> # **TensorFlow  2.1.0** - ***10*** - *Tensorflow Lite*
"""

!pip install tensorflow-gpu==1.13.1
import tensorflow as tf

import numpy as np
from tensorflow.keras.datasets import fashion_mnist

# carregando base de dados
(X_train, y_train), (X_test, y_test) = fashion_mnist.load_data()

# normalizando base de dados
X_train = X_train / 255.
X_test = X_test / 255.

# mudando a dimensionalidade da base de dados
X_train = X_train.reshape(-1, 28*28)
X_test = X_test.reshape(-1, 28*28)

# construindo o modelo
model = tf.keras.models.Sequential()
model.add(tf.keras.layers.Dense(units=128, activation='relu', input_shape=(784,)))
model.add(tf.keras.layers.Dropout(rate=0.2))
model.add(tf.keras.layers.Dense(units=10, activation='softmax'))
# compilando o modelo
model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['sparse_categorical_accuracy'])
model.summary()

# treinando o modelo
model.fit(X_train, y_train, epochs=5)

# avaliando o modelo
test_loss, test_accuracy = model.evaluate(X_test, y_test)
print("Test accuracy: {}".format(test_accuracy))

# salvando e convertendo o modelo para Tensorflow Lite
model_name = 'fashion_mobile_model.h5'
tf.keras.models.save_model(model, model_name)

converter = tf.lite.TFLiteConverter.from_keras_model_file(model_name)
tflite_model = converter.convert()

with open("tflite_model", 'wb') as f:
  f.write(tflite_model)